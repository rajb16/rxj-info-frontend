{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Documents\\\\Projects\\\\rxj.info\\\\file-manager-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// The backend server is running on port 5000\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  // Fetch the list of files from the server when the component mounts\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch(`${API_URL}/files`);\n      const data = await response.json();\n      setUploadedFiles(data);\n    } catch (error) {\n      console.error(\"Error fetching files:\", error);\n    }\n  };\n  const onFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const onFileUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file first!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        alert(\"File uploaded successfully\");\n        setSelectedFile(null); // Reset file input\n        document.getElementById(\"file-input\").value = null; // Clear the file input display\n        fetchFiles(); // Refresh the file list\n      } else {\n        alert(\"File upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Error uploading file\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simple File Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-input\",\n          type: \"file\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onFileUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), uploadedFiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${API_URL}/download/${file}`,\n              download: true,\n              children: file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No files uploaded yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/Mp/mIHON1oTwi14Yk7XwqjWWyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","API_URL","App","_s","selectedFile","setSelectedFile","uploadedFiles","setUploadedFiles","fetchFiles","response","fetch","data","json","error","console","onFileChange","event","target","files","onFileUpload","alert","formData","FormData","append","method","body","ok","document","getElementById","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onClick","length","map","file","index","href","download","_c","$RefreshReg$"],"sources":["C:/Users/Raj/Documents/Projects/rxj.info/file-manager-ui/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// The backend server is running on port 5000\nconst API_URL = \"http://localhost:5000\";\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  // Fetch the list of files from the server when the component mounts\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n\n  const fetchFiles = async () => {\n    try {\n      const response = await fetch(`${API_URL}/files`);\n      const data = await response.json();\n      setUploadedFiles(data);\n    } catch (error) {\n      console.error(\"Error fetching files:\", error);\n    }\n  };\n\n  const onFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onFileUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file first!\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n\n    try {\n      const response = await fetch(`${API_URL}/upload`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        alert(\"File uploaded successfully\");\n        setSelectedFile(null); // Reset file input\n        document.getElementById(\"file-input\").value = null; // Clear the file input display\n        fetchFiles(); // Refresh the file list\n      } else {\n        alert(\"File upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Error uploading file\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Simple File Manager</h1>\n\n        {/* File Upload Section */}\n        <div>\n          <input id=\"file-input\" type=\"file\" onChange={onFileChange} />\n          <button onClick={onFileUpload}>Upload</button>\n        </div>\n\n        {/* File Download Section */}\n        <div className=\"file-list\">\n          <h2>Available Files</h2>\n          {uploadedFiles.length > 0 ? (\n            <ul>\n              {uploadedFiles.map((file, index) => (\n                <li key={index}>\n                  <a href={`${API_URL}/download/${file}`} download>\n                    {file}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No files uploaded yet.</p>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}